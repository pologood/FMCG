// *************************************
//
//   Mixin,辅助宏
//
// *************************************

// ----- Font Face ----- //
// -> https://github.com/thoughtbot/bourbon/edit/master/app/assets/stylesheets/css3/_font-face.scss#
//
// $family - 字体类型
// $path - 字体路径
// $weight - 字重
// $style - 字体样式
// $asset-pipeline - use the Rails asset pipeline (boolean)

@mixin font-face($family, $path, $weight: normal, $style: normal, $asset-pipeline: true) {
    @font-face {
        font-family: $family;
        font-style: $style;
        font-weight: $weight;

        @if $asset-pipeline == true {
            src: font-url("#{$path}.eot");
            src: font-url("#{$path}.eot?#iefix") format("embedded-opentype"), font-url("#{$path}.woff") format("woff"), font-url("#{$path}.ttf") format("truetype"), font-url("#{$path}.svg##{$family}") format("svg");
        }
        @else {
            src: url("#{$path}.eot");
            src: url("#{$path}.eot?#iefix") format("embedded-opentype"), url("#{$path}.woff") format("woff"), url("#{$path}.ttf") format("truetype"), url("#{$path}.svg##{$family}") format("svg");
        }
    }
}

// ----- Respond-to ----- //
// -> Generates a media query
//
// $val - the breakpoint size
// $query - the type of query ('min-width', 'max-width')
// $media - the media type ('screen', 'print', etc.)
// @content - the generated content within the mixin

@mixin respond-to($val, $query: min-width, $media: screen) {
    @media #{$media} and ($query: $val) {
        @content;
    }
}

// ----- inline-block ----- //
// -> 自定义inline-block生成宏
//
// $support-ie7 : 是否支持ie7
@mixin sim-inline-block($support-ie7: true) {
    display: inline-block;

    @if $support-ie7 {
        *display: inline;
        *zoom: 1;
    }
}

// ----- transform no flicker  ----- //
@mixin no-flicker {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-transform-style: preserve-3d;
    transform-style: preserve-3d;

    //-webkit-transform: translate3d(0, 0, 0);
    //transform: translate3d(0, 0, 0);
}

@mixin gpu-accelerate {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
}